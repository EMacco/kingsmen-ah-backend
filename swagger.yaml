swagger: "2.0"
info:
  description: "Authors Haven - A social platform for the creative at heart."
  version: "1.0.0"
  title: "Authors Haven"
  license:
    name: "MIT"
    url: "https://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/api/v1"
tags:
- name: "user"
  description: "User operations"
schemes:
  - "https"
  - "http"
paths:
  /users:
    post:
      tags:
      - "user"
      summary: "Create user"
      description: "Creates a new user in the application"
      operationId: "createUser"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "formData"
        name: "username"
        description: "The unique username"
        required: true
        type: "string"
        format: "text"
        minLength: 4
        maxLength: 100
      - in: "formData"
        name: "email"
        description: "The unique user email"
        required: true
        type: "string"
        format: "email"
        minLength: 5
        maxLength: 255
      - in: "formData"
        name: "password"
        description: "The user password"
        required: true
        type: "string"
        format: "password"
        minLength: 5
        maxLength: 255
      - in: "formData"
        name: "firstname"
        description: "First name of user"
        required: false
        type: "string"
        format: "text"
        minLength: 2
        maxLength: 100
      - in: "formData"
        name: "lastname"
        description: "Last name of user"
        required: false
        type: "string"
        format: "text"
        minLength: 2
        maxLength: 100
      - in: "formData"
        name: "middlename"
        description: "Middle name of user"
        required: false
        type: "string"
        format: "text"
        minLength: 2
        maxLength: 100
      responses:
        201:
          description: "User created successfully"
          schema:
            $ref: "#/definitions/ApiResponse"
        400:
          description: "Invalid email/password supplied"
    get:
      tags:
      - "users"
      summary: "Users with profiles"
      description: "Returns all users and their corresponding profiles"
      operationId: "getUsers"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "success"
          schema:
            $ref: "#/definitions/ApiResponse"
        400:
          description: "fail"
      security:
      - api_key: []
  /auth/login:
    post:
      tags:
      - "user"
      summary: "User login"
      description: "Logs user into the system"
      operationId: "loginUser"
      produces:
      - "application/json"
      parameters:
      - name: "email"
        in: "formData"
        description: "The email for login"
        required: true
        type: "string"
        format: "email"
        minLength: 5
        maxLength: 255
      - name: "password"
        in: "formData"
        description: "The password for login in clear text"
        required: true
        type: "string"
        format: "password"
        minLength: 5
        maxLength: 255
      responses:
        200:
          description: "login successful"
          schema:
            $ref: "#/definitions/ApiResponse"
        400:
          description: "Invalid email/password supplied"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "string"
        format: "int64"
      username:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      firstname:
        type: "string"
      lastname:
        type: "string"
      middlename:
        type: "string"
      active:
        type: boolean
  Profile:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      userId:
        type: "string"
      bio:
        type: "string"
      avatar:
        type: "string"
      phone:
        type: "string"
      location:
        type: "string"
  ApiResponse:
    type: "object"
    properties:
      status:
        type: "integer"
        format: "int32"
      data:
        type: "object"
        items:
          type: "object"
externalDocs:
  description: "Find out more about Author's Haven"
  url: "https://github.com/andela/kingsmen-ah-backend"
